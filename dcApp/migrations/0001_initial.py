# Generated by Django 3.2.6 on 2021-12-29 16:38

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='ThroughFindTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.UUIDField(db_index=True, verbose_name='object ID')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dcapp_throughfindtag_tagged_items', to='contenttypes.contenttype', verbose_name='content type')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dcapp_throughfindtag_items', to='taggit.tag')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='ThroughDonateTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.UUIDField(db_index=True, verbose_name='object ID')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dcapp_throughdonatetag_tagged_items', to='contenttypes.contenttype', verbose_name='content type')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dcapp_throughdonatetag_items', to='taggit.tag')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='Center',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=250, unique=True)),
                ('slug', models.SlugField(blank=True, editable=False, max_length=250, null=True)),
                ('about', models.TextField(blank=True, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=13, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('joined_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('partner', models.BooleanField(blank=True, default=False, null=True)),
                ('pickup', models.BooleanField(blank=True, default=False, null=True)),
                ('additional_material_information', models.TextField(blank=True, null=True)),
                ('hours_from', models.CharField(blank=True, max_length=13, null=True)),
                ('hours_to', models.CharField(blank=True, max_length=13, null=True)),
                ('hours_opening', models.CharField(blank=True, max_length=13, null=True)),
                ('hours_closing', models.CharField(blank=True, max_length=13, null=True)),
                ('lon', models.FloatField(blank=True, null=True, verbose_name='Longitude')),
                ('lat', models.FloatField(blank=True, null=True, verbose_name='Latitude')),
                ('can_donate', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', related_name='donate_centers', through='dcApp.ThroughDonateTag', to='taggit.Tag', verbose_name='Can Donate')),
                ('can_find', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', related_name='find_centers', through='dcApp.ThroughFindTag', to='taggit.Tag', verbose_name='Can Find')),
            ],
        ),
    ]
